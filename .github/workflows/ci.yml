# This file was autogenerated by create-github-actions-setup-for-ember-addons.
#
# You can upgrade the GitHub Actions workflow to the latest blueprints used
# by Create GitHub Actions setup for Ember Addons by running it again:
#
# - `yarn create github-actions-setup-for-ember-addons` if using yarn and
# - `npm init github-actions-setup-for-ember-addons` if using NPM.
#
# See https://github.com/jelhan/create-github-actions-setup-for-ember-addon for
# details.
#
# The following lines contain the configuration used in the last run. Please do
# not change them. Doing so could break upgrade flow.
#
#$ browsers:
#$   - chrome
#$ emberTryScenarios:
#$   - scenario: ember-lts-3.28
#$     allowedToFail: false
#$   - scenario: ember-release
#$     allowedToFail: false
#$   - scenario: ember-beta
#$     allowedToFail: false
#$   - scenario: ember-canary
#$     allowedToFail: true
#$ nodeVersion: 10.x
#$ packageManager: yarn
#

name: CI

on:
  push:
    branches:
      - main
      - 'v*'
  pull_request:

env:
  NODE_VERSION: '14.x'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: yarn test:ember --launch ${{ matrix.browser }}
        working-directory: test-app

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: Get package manager's global cache path
        id: global-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache package manager's global cache and node_modules
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.global-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-floating-deps
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: yarn install --no-lockfile --non-interactive

      - name: Test
        run: yarn test:ember --launch ${{ matrix.browser }}
        working-directory: test-app

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          [
            ember-lts-3.28,
            ember-lts-4.4,
            ember-lts-4.8,
            ember-classic,
            ember-release,
            ember-beta,
            embroider-safe,
            embroider-optimized,
          ]
        allow-failure: [false]
        include:
          - ember-try-scenario: ember-canary
            allow-failure: true

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Tests
        env:
          EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
        run: ./node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO
        working-directory: test-app
